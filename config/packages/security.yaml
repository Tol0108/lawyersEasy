security:
    # Password hashing configurations
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    providers:
        users_in_database:
            entity:
                class: App\Entity\Users
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_in_database
            form_login:
                login_path: login
                check_path: login
                default_target_path: home  # Redirection après la connexion
            logout:
                path: logout
                target: home  # Redirection après la déconnexion
            # Activer différentes méthodes d'authentification
            # switch_user: true # Si vous voulez permettre le switch entre utilisateurs

    # Contrôle d'accès pour les différentes sections du site
    access_control:
        # Accès public (anonymes et connectés)
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/avocat/new, roles: ROLE_ADMIN }
        - { path: ^/avocat, roles: ROLE_USER }
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Valeur minimale pour bcrypt
                time_cost: 3  # Valeur minimale pour argon2
                memory_cost: 3  # Valeur minimale pour argon2
